/usr/include/stdlib.h: 375 - 375
--------------------------------------------------------------------------------

375:   return strtoll (__nptr, (char **) NULL, 10);
/home/m4ssi/Documents/Test/Dotprod/01.dotprod.c: 5 - 56
--------------------------------------------------------------------------------

5: 	double d = 0.0;
6: 	for ( unsigned long long i = 0; i < n; i+=4)	{
7: 		d += ( *(a+i) * *(b+i) );
8: 		d += ( *(a+i+1) * *(b+i+1) );
9: 		d += ( *(a+i+2) * *(b+i+2) );
10: 		d += ( *(a+i+3) * *(b+i+3) );
[...]
24: int main ( int argc, char ** argv)	{
25: 	if ( argc == 1) return 1;
26: 	
27: 	// Size of vectors
28: 	unsigned long long n = atoll ( argv[1]);
29: 	unsigned long long n_b = n/sizeof(double);
30: 
31: 	printf ("%llu\n", n);
32: 
33: 	// Allocate memory for vectors
34: 	double	* a = malloc ( n),
35: 		* b = malloc ( n),
36: 		res = 0.0;
37: 			
38: 	// Init vector values		
39: 	fill_vector ( a, n_b);
40: 	fill_vector ( b, n_b);
41: 	
42: 	
43: 	// Doing a dotprod
44: 	for ( int i = 0; i < 10000; i++)
45: 		res = dotprod ( a, b, n_b);
46: 
47: 
48: 	// Free memory
49: 	free ( a);
50: 	free ( b);
51: 
52: 	// Print dotprod result
53: 	printf ("Res : %lf\n", res);
54: 	
55: 	return 0;
56: }
/usr/include/x86_64-linux-gnu/bits/stdio2.h: 104 - 104
--------------------------------------------------------------------------------

104:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
